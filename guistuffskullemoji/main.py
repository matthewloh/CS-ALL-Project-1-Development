#GUI file generated by GUI Pie, developed by Jabberwock
#https://apps.microsoft.com/store/detail/gui-pie/9P5TH15LZSL7


import os
import sys
import subprocess
import math
from tkinter import *
from tkinter import ttk
import tkinter.font
try:
  from PIL import ImageTk, Image, ImageOps
except:
  print('Installing PIL.')
  subprocess.check_call(['pip', 'install', 'pillow'])
  print('Done.')
  from PIL import ImageTk, Image, ImageOps
dpiError = False
try:
  from ctypes import windll
  windll.shcore.SetProcessDpiAwareness(1)
except:
  print('ERROR. Could not set DPI awareness.')
  dpiError = True
if __name__ == "__main__":
  main = Tk()
else:
  main = Tk()
main.title('main')
if dpiError:
  dpi = 96
else:
  dpi = main.winfo_fpixels('1i')
main.geometry(f'{math.ceil(1920 * dpi / 96)}x{math.ceil(1080 * dpi / 96)}')
main.grid_propagate(False)
for x in range(32):
  Grid.columnconfigure(main, x, weight=1, uniform='row')
  Label(main, width = 1, bg = '#FFE3E1').grid(row = 0, column = x, sticky = N+S+E+W)
for y in range(18):
  Grid.rowconfigure(main, y, weight=1, uniform='row')
  Label(main, width = 1, bg = '#FFE3E1').grid(row = y, column = 0, sticky = N+S+E+W)
main.configure(background='#FFE3E1')

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~WIDGETS~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

main.Image1Original = Image.open(r'C:/Users/matth/Desktop/yeah/Home-Banner-INTI.png')
main.Image1Image = ImageOps.exif_transpose(main.Image1Original)
main.Image1Image = ImageTk.PhotoImage(main.Image1Image.resize((math.ceil(360 * dpi / 96), math.ceil(120 * dpi / 96)), Image.Resampling.LANCZOS))
main.Image1 = Label(main, image = main.Image1Image, width = 1, height = 1, bg = '#FFE3E1')
main.Image1.grid(row = 1, column = 13, columnspan = 6, rowspan = 2, sticky = N+S+E+W)
main.SignUpLabel = Label(main, text = "        Sign Up", font = ('Arial', 14), width = 1, height = 1, fg = '#000000', bg = '#FFF5E4')
main.SignUpLabel.grid(row = 4, column = 16, columnspan = 3, rowspan = 1, sticky = N+S+E+W)
main.LoginLabel = Label(main, text = "Log In        ", font = ('Arial', 14), width = 1, height = 1, fg = '#000000', bg = '#FFF5E4')
main.LoginLabel.grid(row = 4, column = 13, columnspan = 3, rowspan = 1, sticky = N+S+E+W)
main.EmailEntry = Entry(main, width = 1, bg = '#FFFFFF', font = ('Arial', 12), justify = 'center', highlightthickness = 0, bd=0)
main.EmailEntry.grid(row = 6, column = 13, columnspan = 6, rowspan = 1, sticky = N+S+E+W)
main.EmailEntry.insert(0, "Please insert your student email.")
main.PasswordEntry = Entry(main, width = 1, bg = '#FFFFFF', font = ('Arial', 12), justify = 'center', highlightthickness = 0, bd=0)
main.PasswordEntry.grid(row = 8, column = 13, columnspan = 6, rowspan = 1, sticky = N+S+E+W)
main.PasswordEntry.insert(0, "Please insert your password.")

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~BUTTONS~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

def runEvent1(argument):
  if not(__name__ == '__main__'):
    from landingpage import Event1
    try:
      Event1(argument)
    except TypeError:
      Event1()
main.LoginButton = Button(main, text = "LOG IN", font = ('Arial', 16), width = 1, height = 1, fg = '#000000', command = lambda: runEvent1("LoginButton"), bg = '#FFF5E4')
main.LoginButton.grid(row = 11, column = 13, columnspan = 6, rowspan = 1, sticky = N+S+E+W)

#~~~~~~~~~~~~~~~~~~~~~~~~~~~HELPER FUNCTIONS~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

def initModules():
  raise Exception('This main file is outdated. Script landingpage.py must be updated to reflect the changes in GUI Pie v3.')
def init():
  from landingpage import Event1
main.initModules = initModules
def hide():
  main.withdraw()
def show():
  main.deiconify()
def hideAllWidgets():
    main.SignUpLabel.grid_remove()
    main.LoginLabel.grid_remove()
    main.EmailEntry.grid_remove()
    main.PasswordEntry.grid_remove()
    main.LoginButton.grid_remove()
    main.Image1.grid_remove()
main.hideAllWidgets = hideAllWidgets
def showAllWidgets():
    main.SignUpLabel.grid()
    main.LoginLabel.grid()
    main.EmailEntry.grid()
    main.PasswordEntry.grid()
    main.LoginButton.grid()
    main.Image1.grid()
main.showAllWidgets = showAllWidgets
def run():
  global dimensions
  dimensions = [0,0]
  if __name__ != "__main__":
    init()
  resizeEvent(None)
  main.mainloop()
main.run = run
main.hide = hide
main.show = show

dimensions = [main.winfo_width(), main.winfo_height()]
def resize():
  global main, dimensions
  if main.winfo_width() != dimensions[0] or main.winfo_height() != dimensions[1]:
    main.SignUpLabel.config(wraplength = math.ceil(main.winfo_width() * 3 / 32) + 2)
    main.LoginLabel.config(wraplength = math.ceil(main.winfo_width() * 3 / 32) + 2)
    main.LoginButton.config(wraplength = math.ceil(main.winfo_width() * 6 / 32) + 2)
    main.Image1Original = Image.open(r'C:/Users/matth/Desktop/yeah/Home-Banner-INTI.png')
    main.Image1Image = ImageOps.exif_transpose(main.Image1Original)
    main.Image1Image = ImageTk.PhotoImage(main.Image1Image.resize((math.ceil(main.winfo_width() * 6 / 32), math.ceil(main.winfo_height() * 2 / 18)), Image.Resampling.LANCZOS))
    main.Image1.config(image = main.Image1Image)
    dimensions = [main.winfo_width(), main.winfo_height()]

eventID = None
main.resizeDelay = 100
def resizeEvent(event):
  global eventID
  if eventID:
    main.after_cancel(eventID)
  eventID = main.after(main.resizeDelay, resize)
main.bind('<Configure>', resizeEvent)
if __name__ == "__main__":
  main.run()
