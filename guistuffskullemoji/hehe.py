#GUI file generated by GUI Pie, developed by Jabberwock
#https://apps.microsoft.com/store/detail/gui-pie/9P5TH15LZSL7


import os
import sys
import subprocess
import math
from tkinter import *
from tkinter import ttk
import tkinter.font
try:
  from PIL import ImageTk, Image, ImageOps
except:
  print('Installing PIL.')
  subprocess.check_call(['pip', 'install', 'pillow'])
  print('Done.')
  from PIL import ImageTk, Image, ImageOps

if __name__ == "__main__":
  hehe = Tk()
else:
  hehe = Tk()
hehe.title('hehe')
dpi = 96
hehe.geometry('1920x1080')
hehe.grid_propagate(False)
for x in range(32):
  Grid.columnconfigure(hehe, x, weight=1, uniform='row')
  Label(hehe, width = 1, bg = '#FFE3E1').grid(row = 0, column = x, sticky = N+S+E+W)
for y in range(18):
  Grid.rowconfigure(hehe, y, weight=1, uniform='row')
  Label(hehe, width = 1, bg = '#FFE3E1').grid(row = y, column = 0, sticky = N+S+E+W)
hehe.configure(background='#FFE3E1')

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~WIDGETS~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

hehe.LandingPageArtOriginal = Image.open(r'D:/Syncthingstuff/Abstruct/Colored ocean in another world.jpg')
hehe.LandingPageArtImage = ImageOps.exif_transpose(hehe.LandingPageArtOriginal)
hehe.LandingPageArtImage = ImageTk.PhotoImage(hehe.LandingPageArtImage.resize((math.ceil(840 * dpi / 96), math.ceil(840 * dpi / 96)), Image.Resampling.LANCZOS))
hehe.LandingPageArt = Label(hehe, image = hehe.LandingPageArtImage, width = 1, height = 1, bg = '#FFE3E1')
hehe.LandingPageArt.grid(row = 2, column = 2, columnspan = 14, rowspan = 14, sticky = N+S+E+W)
hehe.INTI_BannerOriginal = Image.open(r'C:/Users/matth/Desktop/yeah/Home-Banner-INTI.png')
hehe.INTI_BannerImage = ImageOps.exif_transpose(hehe.INTI_BannerOriginal)
hehe.INTI_BannerImage = ImageTk.PhotoImage(hehe.INTI_BannerImage.resize((math.ceil(359 * dpi / 96), math.ceil(120 * dpi / 96)), Image.Resampling.LANCZOS))
hehe.INTI_Banner = Label(hehe, image = hehe.INTI_BannerImage, width = 1, height = 1, bg = '#FFE3E1')
hehe.INTI_Banner.grid(row = 2, column = 20, columnspan = 8, rowspan = 2, sticky = N+S+E+W)
hehe.haveanaccountlabel = Label(hehe, text = "Already have an account?", font = ('Arial', 16), width = 1, height = 1, fg = '#000000', bg = '#00FFFF')
hehe.haveanaccountlabel.grid(row = 15, column = 20, columnspan = 5, rowspan = 1, sticky = N+S+E+W)
hehe.Label1 = Label(hehe, text = "Label1", font = ('Arial', 16), width = 1, height = 1, fg = '#000000', bg = '#00FFFF')
hehe.Label1.grid(row = 5, column = 19, columnspan = 10, rowspan = 9, sticky = N+S+E+W)

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~BUTTONS~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

def runEvent1(argument):
  if not(__name__ == '__main__'):
    from signuplandingscreen import Event1
    try:
      Event1(argument)
    except TypeError:
      Event1()
hehe.gotosigninbutton = Button(hehe, text = "Click here for sign in page", font = ('Arial', 14), width = 1, height = 1, fg = '#000000', command = lambda: runEvent1("gotosigninbutton"), bg = '#00FFFF')
hehe.gotosigninbutton.grid(row = 15, column = 26, columnspan = 2, rowspan = 1, sticky = N+S+E+W)

#~~~~~~~~~~~~~~~~~~~~~~~~~~~HELPER FUNCTIONS~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

def initModules():
  raise Exception('This main file is outdated. Script signuplandingscreen.py must be updated to reflect the changes in GUI Pie v3.')
def init():
  from signuplandingscreen import Event1
hehe.initModules = initModules
def hide():
  hehe.withdraw()
def show():
  hehe.deiconify()
def hideAllWidgets():
    hehe.haveanaccountlabel.grid_remove()
    hehe.Label1.grid_remove()
    hehe.gotosigninbutton.grid_remove()
    hehe.LandingPageArt.grid_remove()
    hehe.INTI_Banner.grid_remove()
hehe.hideAllWidgets = hideAllWidgets
def showAllWidgets():
    hehe.haveanaccountlabel.grid()
    hehe.Label1.grid()
    hehe.gotosigninbutton.grid()
    hehe.LandingPageArt.grid()
    hehe.INTI_Banner.grid()
hehe.showAllWidgets = showAllWidgets
def run():
  global dimensions
  dimensions = [0,0]
  if __name__ != "__main__":
    init()
  resizeEvent(None)
  hehe.mainloop()
hehe.run = run
hehe.hide = hide
hehe.show = show

dimensions = [hehe.winfo_width(), hehe.winfo_height()]
def resize():
  global hehe, dimensions
  if hehe.winfo_width() != dimensions[0] or hehe.winfo_height() != dimensions[1]:
    hehe.haveanaccountlabel.config(wraplength = math.ceil(hehe.winfo_width() * 5 / 32) + 2)
    hehe.Label1.config(wraplength = math.ceil(hehe.winfo_width() * 10 / 32) + 2)
    hehe.gotosigninbutton.config(wraplength = math.ceil(hehe.winfo_width() * 2 / 32) + 2)
    hehe.LandingPageArtOriginal = Image.open(r'D:/Syncthingstuff/Abstruct/Colored ocean in another world.jpg')
    hehe.LandingPageArtImage = ImageOps.exif_transpose(hehe.LandingPageArtOriginal)
    if (hehe.winfo_height() / 18 * 14) * 2340 / 2340 < hehe.winfo_width() * 14 / 32:
      hehe.LandingPageArtImage = ImageTk.PhotoImage(hehe.LandingPageArtImage.resize((math.ceil(hehe.winfo_height() * 14 / 18 * 2340 / 2340), math.ceil(hehe.winfo_height() * 14 / 18)), Image.Resampling.LANCZOS))
    else:
      hehe.LandingPageArtImage = ImageTk.PhotoImage(hehe.LandingPageArtImage.resize((math.ceil(hehe.winfo_width() * 14 / 32), math.ceil(hehe.winfo_width() * 14 / 32 * 2340 / 2340)), Image.Resampling.LANCZOS))
    hehe.LandingPageArt.config(image = hehe.LandingPageArtImage)
    hehe.INTI_BannerOriginal = Image.open(r'C:/Users/matth/Desktop/yeah/Home-Banner-INTI.png')
    hehe.INTI_BannerImage = ImageOps.exif_transpose(hehe.INTI_BannerOriginal)
    if (hehe.winfo_height() / 18 * 2) * 1201 / 401 < hehe.winfo_width() * 8 / 32:
      hehe.INTI_BannerImage = ImageTk.PhotoImage(hehe.INTI_BannerImage.resize((math.ceil(hehe.winfo_height() * 2 / 18 * 1201 / 401), math.ceil(hehe.winfo_height() * 2 / 18)), Image.Resampling.LANCZOS))
    else:
      hehe.INTI_BannerImage = ImageTk.PhotoImage(hehe.INTI_BannerImage.resize((math.ceil(hehe.winfo_width() * 8 / 32), math.ceil(hehe.winfo_width() * 8 / 32 * 401 / 1201)), Image.Resampling.LANCZOS))
    hehe.INTI_Banner.config(image = hehe.INTI_BannerImage)
    dimensions = [hehe.winfo_width(), hehe.winfo_height()]

eventID = None
hehe.resizeDelay = 100
def resizeEvent(event):
  global eventID
  if eventID:
    hehe.after_cancel(eventID)
  eventID = hehe.after(hehe.resizeDelay, resize)
hehe.bind('<Configure>', resizeEvent)
if __name__ == "__main__":
  hehe.run()
