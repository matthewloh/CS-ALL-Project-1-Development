#GUI file generated by GUI Pie, developed by Jabberwock
#https://apps.microsoft.com/store/detail/gui-pie/9P5TH15LZSL7


import os
import sys
import subprocess
import math
from tkinter import *
from tkinter import ttk
import tkinter.font


if __name__ == "__main__":
  registrationforeventsGUI = Tk()
else:
  registrationforeventsGUI = Tk()
registrationforeventsGUI.title('registrationforeventsGUI')
dpi = 96
registrationforeventsGUI.geometry('1920x1080')
registrationforeventsGUI.grid_propagate(False)
for x in range(32):
  Grid.columnconfigure(registrationforeventsGUI, x, weight=1, uniform='row')
  Label(registrationforeventsGUI, width = 1, bg = '#FFFFFF').grid(row = 0, column = x, sticky = N+S+E+W)
for y in range(18):
  Grid.rowconfigure(registrationforeventsGUI, y, weight=1, uniform='row')
  Label(registrationforeventsGUI, width = 1, bg = '#FFFFFF').grid(row = y, column = 0, sticky = N+S+E+W)
registrationforeventsGUI.configure(background='#FFFFFF')
registrationforeventsGUI.resizable(False, False)

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~WIDGETS~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

registrationforeventsGUI.Label1 = Label(registrationforeventsGUI, text = "Registration Page", font = ('Arial', 16), width = 1, height = 1, fg = '#000000', bg = '#00FFFF')
registrationforeventsGUI.Label1.grid(row = 1, column = 10, columnspan = 12, rowspan = 2, sticky = N+S+E+W)
registrationforeventsGUI.Label2 = Label(registrationforeventsGUI, text = "Name of Event", font = ('Arial', 16), width = 1, height = 1, fg = '#000000', bg = '#00FFFF')
registrationforeventsGUI.Label2.grid(row = 4, column = 6, columnspan = 4, rowspan = 1, sticky = N+S+E+W)
registrationforeventsGUI.Entry1 = Entry(registrationforeventsGUI, width = 1, bg = '#00FFC7', font = ('Arial', 16), justify = 'center')
registrationforeventsGUI.Entry1.grid(row = 4, column = 11, columnspan = 10, rowspan = 1, sticky = N+S+E+W)
registrationforeventsGUI.Entry1.insert(0, "Insert Text Here")
registrationforeventsGUI.Entry2 = Entry(registrationforeventsGUI, width = 1, bg = '#FFFFFF', font = ('Arial', 16), justify = 'center')
registrationforeventsGUI.Entry2.grid(row = 6, column = 11, columnspan = 10, rowspan = 1, sticky = N+S+E+W)
registrationforeventsGUI.Entry2.insert(0, "")

#~~~~~~~~~~~~~~~~~~~~~~~~~~~HELPER FUNCTIONS~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

def initModules():
  raise Exception('This main file is outdated. Script main.py must be updated to reflect the changes in GUI Pie v3.')
def init():
  pass
registrationforeventsGUI.initModules = initModules
def hide():
  registrationforeventsGUI.withdraw()
def show():
  registrationforeventsGUI.deiconify()
def hideAllWidgets():
    registrationforeventsGUI.Label1.grid_remove()
    registrationforeventsGUI.Label2.grid_remove()
    registrationforeventsGUI.Entry1.grid_remove()
    registrationforeventsGUI.Entry2.grid_remove()
registrationforeventsGUI.hideAllWidgets = hideAllWidgets
def showAllWidgets():
    registrationforeventsGUI.Label1.grid()
    registrationforeventsGUI.Label2.grid()
    registrationforeventsGUI.Entry1.grid()
    registrationforeventsGUI.Entry2.grid()
registrationforeventsGUI.showAllWidgets = showAllWidgets
def run():
  global dimensions
  dimensions = [0,0]
  if __name__ != "__main__":
    init()
  registrationforeventsGUI.mainloop()
registrationforeventsGUI.run = run
registrationforeventsGUI.hide = hide
registrationforeventsGUI.show = show

dimensions = [registrationforeventsGUI.winfo_width(), registrationforeventsGUI.winfo_height()]
def resize():
  global registrationforeventsGUI, dimensions
  if registrationforeventsGUI.winfo_width() != dimensions[0] or registrationforeventsGUI.winfo_height() != dimensions[1]:
    registrationforeventsGUI.Label1.config(wraplength = math.ceil(registrationforeventsGUI.winfo_width() * 12 / 32) + 2)
    registrationforeventsGUI.Label2.config(wraplength = math.ceil(registrationforeventsGUI.winfo_width() * 4 / 32) + 2)

eventID = None
registrationforeventsGUI.resizeDelay = 100
def resizeEvent(event):
  global eventID
  if eventID:
    registrationforeventsGUI.after_cancel(eventID)
  eventID = registrationforeventsGUI.after(registrationforeventsGUI.resizeDelay, resize)
registrationforeventsGUI.bind('<Configure>', resizeEvent)
if __name__ == "__main__":
  registrationforeventsGUI.run()
