#GUI file generated by GUI Pie, developed by Jabberwock
#https://apps.microsoft.com/store/detail/gui-pie/9P5TH15LZSL7


import os
import sys
import subprocess
import math
from tkinter import *
from tkinter import ttk
import tkinter.font
try:
  from PIL import ImageTk, Image, ImageOps
except:
  print('Installing PIL.')
  subprocess.check_call(['pip', 'install', 'pillow'])
  print('Done.')
  from PIL import ImageTk, Image, ImageOps

if __name__ == "__main__":
  huhhh = Tk()
else:
  huhhh = Tk()
huhhh.title('huhhh') #basically like self.root.title
dpi = 96 
huhhh.geometry('1920x1080')
huhhh.grid_propagate(False)
for x in range(32):
  Grid.columnconfigure(huhhh, x, weight=1, uniform='row')
  Label(huhhh, width = 1, bg = '#FFE3E1').grid(row = 0, column = x, sticky = N+S+E+W)
for y in range(18):
  Grid.rowconfigure(huhhh, y, weight=1, uniform='row')
  Label(huhhh, width = 1, bg = '#FFE3E1').grid(row = y, column = 0, sticky = N+S+E+W)
huhhh.configure(background='#FFE3E1')

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~WIDGETS~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

huhhh.INTI_BannerOriginal = Image.open(r'C:/Users/matth/Desktop/yeah/Home-Banner-INTI.png')
huhhh.INTI_BannerImage = ImageOps.exif_transpose(huhhh.INTI_BannerOriginal)
huhhh.INTI_BannerImage = ImageTk.PhotoImage(huhhh.INTI_BannerImage.resize((math.ceil(480 * dpi / 96), math.ceil(180 * dpi / 96)), Image.Resampling.LANCZOS))
huhhh.INTI_Banner = Label(huhhh, image = huhhh.INTI_BannerImage, width = 1, height = 1, bg = '#FFE3E1')
huhhh.INTI_Banner.grid(row = 2, column = 20, columnspan = 8, rowspan = 3, sticky = N+S+E+W)
huhhh.LandingPageArtOriginal = Image.open(r'D:/Syncthingstuff/Abstruct/Colored ocean in another world.jpg')
huhhh.LandingPageArtImage = ImageOps.exif_transpose(huhhh.LandingPageArtOriginal)
huhhh.LandingPageArtImage = ImageTk.PhotoImage(huhhh.LandingPageArtImage.resize((math.ceil(840 * dpi / 96), math.ceil(840 * dpi / 96)), Image.Resampling.LANCZOS))
huhhh.LandingPageArt = Label(huhhh, image = huhhh.LandingPageArtImage, width = 1, height = 1, bg = '#FFE3E1')
huhhh.LandingPageArt.grid(row = 2, column = 2, columnspan = 14, rowspan = 14, sticky = N+S+E+W)
huhhh.LoginLabel = Label(huhhh, text = "Sign in to your account", font = ('Arial', 18), width = 1, height = 1, fg = '#000000', bg = '#FFF5E4')
huhhh.LoginLabel.grid(row = 6, column = 21, columnspan = 6, rowspan = 1, sticky = N+S+E+W)
huhhh.NewIntiLabel = Label(huhhh, text = "New to INTI Interactive System?", font = ('Arial', 14), width = 1, height = 1, fg = '#000000', bg = '#00FFFF')
huhhh.NewIntiLabel.grid(row = 14, column = 21, columnspan = 4, rowspan = 1, sticky = N+S+E+W)
huhhh.PlaceholderRadioButton = Label(huhhh, text = "Placeholder | Remember me.?", font = ('Arial', 16), width = 1, height = 1, fg = '#000000', bg = '#00FFFF')
huhhh.PlaceholderRadioButton.grid(row = 12, column = 21, columnspan = 2, rowspan = 1, sticky = N+S+E+W)
huhhh.ForgotPassword = Label(huhhh, text = "Forgot password?", font = ('Arial', 16), width = 1, height = 1, fg = '#000000', bg = '#00FFFF')
huhhh.ForgotPassword.grid(row = 13, column = 21, columnspan = 2, rowspan = 1, sticky = N+S+E+W)
huhhh.Label1 = Label(huhhh, text = "Label1", font = ('Arial', 16), width = 1, height = 1, fg = '#000000', bg = '#00FFFF')
huhhh.Label1.grid(row = 0, column = 18, columnspan = 11, rowspan = 1, sticky = N+S+E+W)
huhhh.EmailEntry = Entry(huhhh, width = 1, bg = '#FFFFFF', font = ('Arial', 14), justify = 'center', highlightthickness = 0, bd=0)
huhhh.EmailEntry.grid(row = 8, column = 21, columnspan = 6, rowspan = 1, sticky = N+S+E+W)
huhhh.EmailEntry.insert(0, "Please insert your student email.")
huhhh.PasswordEntry = Entry(huhhh, width = 1, bg = '#FFFFFF', font = ('Arial', 14), justify = 'center', highlightthickness = 0, bd=0)
huhhh.PasswordEntry.grid(row = 10, column = 21, columnspan = 6, rowspan = 1, sticky = N+S+E+W)
huhhh.PasswordEntry.insert(0, "Please insert your password.")

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~BUTTONS~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

def runEvent1(argument):
  if not(__name__ == '__main__'):
    from landingpage import Event1
    try:
      Event1(argument)
    except TypeError:
      Event1()
huhhh.Button2 = Button(huhhh, text = "Button2", font = ('Arial', 16), width = 1, height = 1, fg = '#000000', command = lambda: runEvent1("Button2"), bg = '#00FFFF')
huhhh.Button2.grid(row = 14, column = 25, columnspan = 2, rowspan = 1, sticky = N+S+E+W)
huhhh.SignInButton = Button(huhhh, text = "SIGN IN", font = ('Arial', 16), width = 1, height = 1, fg = '#000000', command = lambda: runEvent1("SignInButton"), bg = '#FFF5E4')
huhhh.SignInButton.grid(row = 12, column = 25, columnspan = 2, rowspan = 1, sticky = N+S+E+W)
huhhh.Button1 = Button(huhhh, text = "Button1", font = ('Arial', 16), width = 1, height = 1, fg = '#000000', command = lambda: runEvent1("Button1"), bg = '#00FFFF')
huhhh.Button1.grid(row = 1, column = 18, columnspan = 3, rowspan = 1, sticky = N+S+E+W)

#~~~~~~~~~~~~~~~~~~~~~~~~~~~HELPER FUNCTIONS~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

def initModules():
  raise Exception('This main file is outdated. Script landingpage.py must be updated to reflect the changes in GUI Pie v3.')
def init():
  from landingpage import Event1
huhhh.initModules = initModules
def hide():
  huhhh.withdraw()
def show():
  huhhh.deiconify()
def hideAllWidgets():
    huhhh.LoginLabel.grid_remove()
    huhhh.NewIntiLabel.grid_remove()
    huhhh.PlaceholderRadioButton.grid_remove()
    huhhh.ForgotPassword.grid_remove()
    huhhh.Label1.grid_remove()
    huhhh.EmailEntry.grid_remove()
    huhhh.PasswordEntry.grid_remove()
    huhhh.Button2.grid_remove()
    huhhh.SignInButton.grid_remove()
    huhhh.Button1.grid_remove()
    huhhh.INTI_Banner.grid_remove()
    huhhh.LandingPageArt.grid_remove()
huhhh.hideAllWidgets = hideAllWidgets
def showAllWidgets():
    huhhh.LoginLabel.grid()
    huhhh.NewIntiLabel.grid()
    huhhh.PlaceholderRadioButton.grid()
    huhhh.ForgotPassword.grid()
    huhhh.Label1.grid()
    huhhh.EmailEntry.grid()
    huhhh.PasswordEntry.grid()
    huhhh.Button2.grid()
    huhhh.SignInButton.grid()
    huhhh.Button1.grid()
    huhhh.INTI_Banner.grid()
    huhhh.LandingPageArt.grid()
huhhh.showAllWidgets = showAllWidgets
def run():
  global dimensions
  dimensions = [0,0]
  if __name__ != "__main__":
    init()
  resizeEvent(None)
  huhhh.mainloop()
huhhh.run = run
huhhh.hide = hide
huhhh.show = show

dimensions = [huhhh.winfo_width(), huhhh.winfo_height()]
def resize():
  global huhhh, dimensions
  if huhhh.winfo_width() != dimensions[0] or huhhh.winfo_height() != dimensions[1]:
    huhhh.LoginLabel.config(wraplength = math.ceil(huhhh.winfo_width() * 6 / 32) + 2)
    huhhh.NewIntiLabel.config(wraplength = math.ceil(huhhh.winfo_width() * 4 / 32) + 2)
    huhhh.PlaceholderRadioButton.config(wraplength = math.ceil(huhhh.winfo_width() * 2 / 32) + 2)
    huhhh.ForgotPassword.config(wraplength = math.ceil(huhhh.winfo_width() * 2 / 32) + 2)
    huhhh.Label1.config(wraplength = math.ceil(huhhh.winfo_width() * 11 / 32) + 2)
    huhhh.Button2.config(wraplength = math.ceil(huhhh.winfo_width() * 2 / 32) + 2)
    huhhh.SignInButton.config(wraplength = math.ceil(huhhh.winfo_width() * 2 / 32) + 2)
    huhhh.Button1.config(wraplength = math.ceil(huhhh.winfo_width() * 3 / 32) + 2)
    huhhh.INTI_BannerOriginal = Image.open(r'C:/Users/matth/Desktop/yeah/Home-Banner-INTI.png')
    huhhh.INTI_BannerImage = ImageOps.exif_transpose(huhhh.INTI_BannerOriginal)
    huhhh.INTI_BannerImage = ImageTk.PhotoImage(huhhh.INTI_BannerImage.resize((math.ceil(huhhh.winfo_width() * 8 / 32), math.ceil(huhhh.winfo_height() * 3 / 18)), Image.Resampling.LANCZOS))
    huhhh.INTI_Banner.config(image = huhhh.INTI_BannerImage)
    huhhh.LandingPageArtOriginal = Image.open(r'D:/Syncthingstuff/Abstruct/Colored ocean in another world.jpg')
    huhhh.LandingPageArtImage = ImageOps.exif_transpose(huhhh.LandingPageArtOriginal)
    if (huhhh.winfo_height() / 18 * 14) * 2340 / 2340 < huhhh.winfo_width() * 14 / 32:
      huhhh.LandingPageArtImage = ImageTk.PhotoImage(huhhh.LandingPageArtImage.resize((math.ceil(huhhh.winfo_height() * 14 / 18 * 2340 / 2340), math.ceil(huhhh.winfo_height() * 14 / 18)), Image.Resampling.LANCZOS))
    else:
      huhhh.LandingPageArtImage = ImageTk.PhotoImage(huhhh.LandingPageArtImage.resize((math.ceil(huhhh.winfo_width() * 14 / 32), math.ceil(huhhh.winfo_width() * 14 / 32 * 2340 / 2340)), Image.Resampling.LANCZOS))
    huhhh.LandingPageArt.config(image = huhhh.LandingPageArtImage)
    dimensions = [huhhh.winfo_width(), huhhh.winfo_height()]

eventID = None
huhhh.resizeDelay = 100
def resizeEvent(event):
  global eventID
  if eventID:
    huhhh.after_cancel(eventID)
  eventID = huhhh.after(huhhh.resizeDelay, resize)
huhhh.bind('<Configure>', resizeEvent)
if __name__ == "__main__":
  huhhh.run()
